{"version":3,"sources":["components/toolbar.jsx","components/editor.jsx","components/previewer.jsx","App.js","serviceWorker.js","index.js"],"names":["Toolbar","props","state","id","className","onClick","this","setBold","class","setItalic","setBlockQuotes","setLink","setInlineCode","setPicture","setUL","setOL","Component","Editor","toggleEditor","editor","bind","setState","elmnt","pos1","pos2","pos3","pos4","dragMouseDown","e","window","event","preventDefault","clientX","clientY","document","onmouseup","closeDragElement","onmousemove","elementDrag","style","top","offsetTop","left","offsetLeft","getElementById","onmousedown","dragElement","Fragment","CSSTransition","in","timeout","classNames","display","autoFocus","rows","cols","value","markThisText","onChange","changeText","marked","require","Previewer","dangerouslySetInnerHTML","text","breaks","__html","toolbarOptions","App","toggleFeature","plholder","placeholder","insertAtCaret","querySelector","focus","textarea","setRangeText","selectionStart","selectionEnd","newValue","console","log","param","target","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f76f5da4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nclass Toolbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"sidebar-container\">\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary rounded-0\"\r\n            onClick={this.props.setBold}\r\n            id=\"bold-text\"\r\n          >\r\n            <i class=\"fas fa-bold\"></i>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary rounded-0\"\r\n            onClick={this.props.setItalic}\r\n          >\r\n            <i class=\"fas fa-italic\"></i>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary rounded-0\"\r\n            onClick={this.props.setBlockQuotes}\r\n          >\r\n            <i class=\"fas fa-quote-right\"></i>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary rounded-0\"\r\n            onClick={this.props.setLink}\r\n          >\r\n            <i class=\"fas fa-link\"></i>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary rounded-0\"\r\n            onClick={this.props.setInlineCode}\r\n          >\r\n            <i class=\"fas fa-code\"></i>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary rounded-0\"\r\n            onClick={this.props.setPicture}\r\n          >\r\n            <i class=\"fas fa-images\"></i>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary rounded-0\"\r\n            onClick={this.props.setUL}\r\n          >\r\n            <i class=\"fas fa-sort-numeric-down\"></i>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary rounded-0\"\r\n            onClick={this.props.setOL}\r\n          >\r\n            <i class=\"fas fa-list-ul\"></i>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary rounded-0 bg-info\"\r\n            id=\"draggable-sidebar\"\r\n          >\r\n            <i class=\"fas fa-arrows-alt\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toolbar;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Toolbar from \"./toolbar.jsx\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nclass Editor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toggleEditor: false,\r\n      editor: \"ON\",\r\n    };\r\n    this.toggleEditor = this.toggleEditor.bind(this);\r\n  }\r\n  toggleEditor() {\r\n    this.setState({\r\n      toggleEditor: !this.state.toggleEditor,\r\n    });\r\n    if (this.state.toggleEditor === true) {\r\n      this.setState({\r\n        editor: \"ON\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        editor: \"OFF\",\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    function dragElement(elmnt) {\r\n      var pos1 = 0,\r\n        pos2 = 0,\r\n        pos3 = 0,\r\n        pos4 = 0;\r\n      if (document.getElementById(elmnt.id + \"-sidebar\")) {\r\n        document.getElementById(\r\n          elmnt.id + \"-sidebar\"\r\n        ).onmousedown = dragMouseDown;\r\n      } else {\r\n        elmnt.onmousedown = dragMouseDown;\r\n      }\r\n\r\n      function dragMouseDown(e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n        document.onmouseup = closeDragElement;\r\n        document.onmousemove = elementDrag;\r\n      }\r\n\r\n      function elementDrag(e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n\r\n        pos1 = pos3 - e.clientX;\r\n        pos2 = pos4 - e.clientY;\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n\r\n        elmnt.style.top = elmnt.offsetTop - pos2 + \"px\";\r\n        elmnt.style.left = elmnt.offsetLeft - pos1 + \"px\";\r\n      }\r\n\r\n      function closeDragElement() {\r\n        document.onmouseup = null;\r\n        document.onmousemove = null;\r\n      }\r\n    }\r\n    dragElement(document.getElementById(\"draggable\"));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CSSTransition\r\n          in={this.state.toggleEditor}\r\n          timeout={500}\r\n          classNames=\"editor\"\r\n        >\r\n          <div\r\n            class=\"vertical-center mx-auto rounded bg-dark shadow\"\r\n            id=\"draggable\"\r\n            style={{ display: \"flex\" }}\r\n          >\r\n            <div class=\"rounded-top\">\r\n              <Toolbar\r\n                setBold={this.props.setBold}\r\n                setItalic={this.props.setItalic}\r\n                setBlockQuotes={this.props.setBlockQuotes}\r\n                setLink={this.props.setLink}\r\n                setInlineCode={this.props.setInlineCode}\r\n                setPicture={this.props.setPicture}\r\n                setUL={this.props.setUL}\r\n                setOL={this.props.setOL}\r\n              />\r\n            </div>\r\n            <textarea\r\n              class=\" rounded-bottom bg-secondary\"\r\n              autoFocus\r\n              rows=\"11\"\r\n              cols=\"57\"\r\n              id=\"editor\"\r\n              value={this.props.markThisText}\r\n              onChange={this.props.changeText}\r\n            ></textarea>\r\n          </div>\r\n        </CSSTransition>\r\n        <button\r\n          class=\"btn btn-dark fixed-top\"\r\n          id=\"toggle-editor\"\r\n          onClick={this.toggleEditor}\r\n        >\r\n          {\"Editor: \" + this.state.editor}\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst marked = require(\"marked\");\r\n\r\nfunction mark(value) {\r\n  return { __html: value };\r\n}\r\n\r\nfunction Previewer(props) {\r\n  return (\r\n    <div\r\n      id=\"preview\"\r\n      dangerouslySetInnerHTML={mark(marked(props.text, { breaks: true }))}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default Previewer;\r\n","import React, { Component } from \"react\";\nimport Editor from \"./components/editor\";\nimport Previewer from \"./components/previewer\";\nimport plholder from \"./placeholder.json\";\n\nconst toolbarOptions = [\n  \" **Put Bold Text Here** \",\n  \" _Put Italic Text Here_ \",\n  \" > Put Block Quotes Here \",\n  \"  [Link](http://) \",\n  \" `Inline Code` \",\n  \" ![Alt Text](http://) \",\n  \" - List Item \",\n  \" 1. List Item \",\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleFeature: false,\n      text: plholder.placeholder,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.insertAtCaret = this.insertAtCaret.bind(this);\n    this.setBold = this.setBold.bind(this);\n    this.setInlineCode = this.setInlineCode.bind(this);\n    this.setItalic = this.setItalic.bind(this);\n    this.setBlockQuotes = this.setBlockQuotes.bind(this);\n    this.setLink = this.setLink.bind(this);\n    this.setOL = this.setOL.bind(this);\n    this.setUL = this.setUL.bind(this);\n    this.setPicture = this.setPicture.bind(this);\n  }\n\n  insertAtCaret(text) {\n    document.querySelector(\"textarea\").focus();\n    const textarea = document.querySelector(\"textarea\");\n    textarea.setRangeText(\n      text,\n      textarea.selectionStart,\n      textarea.selectionEnd,\n      \"select\"\n    );\n    const newValue = textarea.value;\n    console.log(newValue);\n    this.setState({\n      text: newValue,\n    });\n  }\n\n  setBold() {\n    this.insertAtCaret(toolbarOptions[0]);\n  }\n  setItalic() {\n    this.insertAtCaret(toolbarOptions[1]);\n  }\n  setBlockQuotes() {\n    this.insertAtCaret(toolbarOptions[2]);\n  }\n  setLink() {\n    this.insertAtCaret(toolbarOptions[3]);\n  }\n  setInlineCode() {\n    this.insertAtCaret(toolbarOptions[4]);\n  }\n  setPicture() {\n    this.insertAtCaret(toolbarOptions[5]);\n  }\n  setUL() {\n    this.insertAtCaret(toolbarOptions[6]);\n  }\n  setOL() {\n    this.insertAtCaret(toolbarOptions[7]);\n  }\n\n  onChange(param) {\n    this.setState({ text: param.target.value });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Editor\n          markThisText={this.state.text}\n          changeText={this.onChange}\n          setBold={this.setBold}\n          setItalic={this.setItalic}\n          setBlockQuotes={this.setBlockQuotes}\n          setLink={this.setLink}\n          setInlineCode={this.setInlineCode}\n          setPicture={this.setPicture}\n          setUL={this.setUL}\n          setOL={this.setOL}\n        />\n\n        <div class=\"container m-5 rounded-lg shadow-lg\" id=\"marked-down-block\">\n          <Previewer text={this.state.text} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}